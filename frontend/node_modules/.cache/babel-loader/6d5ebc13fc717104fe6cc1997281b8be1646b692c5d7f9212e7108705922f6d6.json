{"ast":null,"code":"import * as actionTypes from '../action/types';\n//Reducers to store all changes into states using redux\nexport const uniReducers = function () {\n  let state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : [];\n  let action = arguments.length > 1 ? arguments[1] : undefined;\n  switch (action.type) {\n    case actionTypes.LISTUNI:\n      // Listing all Universities\n      return action.payload;\n    default:\n      return [];\n  }\n};\nexport const uniMajors = function () {\n  let state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : [];\n  let action = arguments.length > 1 ? arguments[1] : undefined;\n  switch (action.type) {\n    case actionTypes.LISTMAJORS:\n      // Listing all Courses\n      return action.payload;\n    default:\n      return [];\n  }\n};\nexport const uniById = function () {\n  let state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : [];\n  let action = arguments.length > 1 ? arguments[1] : undefined;\n  switch (action.type) {\n    case actionTypes.UNIBYID:\n      // Listing universities based on ID\n      return action.payload;\n    case actionTypes.LISTCOMMENT:\n      // Listing comments\n      return action.payload;\n    default:\n      return [];\n  }\n};","map":{"version":3,"names":["actionTypes","uniReducers","state","action","type","LISTUNI","payload","uniMajors","LISTMAJORS","uniById","UNIBYID","LISTCOMMENT"],"sources":["/Users/nethraneu/Documents/WEB DEV/finalProject/final-project-electrons/frontend/src/redux/reducers/uniReducers.js"],"sourcesContent":["import * as actionTypes from '../action/types'\n//Reducers to store all changes into states using redux\nexport const uniReducers = (state = [], action) => {\n    switch(action.type){\n     \n        case actionTypes.LISTUNI:\n            // Listing all Universities\n            return action.payload\n        \n        default:\n            return[];\n\n    }\n} \n\nexport const uniMajors = (state = [], action) => {\n    switch(action.type){\n        case actionTypes.LISTMAJORS:\n            // Listing all Courses\n            return action.payload\n        default:\n            return[];\n\n    }\n} \n\nexport const uniById = (state = [], action) => {\n    switch(action.type){\n        case actionTypes.UNIBYID:\n            // Listing universities based on ID\n            return action.payload\n        case actionTypes.LISTCOMMENT:\n            // Listing comments\n            return action.payload\n\n        default:\n            return[];\n\n    }\n} \n\n"],"mappings":"AAAA,OAAO,KAAKA,WAAW,MAAM,iBAAiB;AAC9C;AACA,OAAO,MAAMC,WAAW,GAAG,YAAwB;EAAA,IAAvBC,KAAK,uEAAG,EAAE;EAAA,IAAEC,MAAM;EAC1C,QAAOA,MAAM,CAACC,IAAI;IAEd,KAAKJ,WAAW,CAACK,OAAO;MACpB;MACA,OAAOF,MAAM,CAACG,OAAO;IAEzB;MACI,OAAM,EAAE;EAAC;AAGrB,CAAC;AAED,OAAO,MAAMC,SAAS,GAAG,YAAwB;EAAA,IAAvBL,KAAK,uEAAG,EAAE;EAAA,IAAEC,MAAM;EACxC,QAAOA,MAAM,CAACC,IAAI;IACd,KAAKJ,WAAW,CAACQ,UAAU;MACvB;MACA,OAAOL,MAAM,CAACG,OAAO;IACzB;MACI,OAAM,EAAE;EAAC;AAGrB,CAAC;AAED,OAAO,MAAMG,OAAO,GAAG,YAAwB;EAAA,IAAvBP,KAAK,uEAAG,EAAE;EAAA,IAAEC,MAAM;EACtC,QAAOA,MAAM,CAACC,IAAI;IACd,KAAKJ,WAAW,CAACU,OAAO;MACpB;MACA,OAAOP,MAAM,CAACG,OAAO;IACzB,KAAKN,WAAW,CAACW,WAAW;MACxB;MACA,OAAOR,MAAM,CAACG,OAAO;IAEzB;MACI,OAAM,EAAE;EAAC;AAGrB,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}