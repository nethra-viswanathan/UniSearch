{"ast":null,"code":"import { LISTUNI, LISTMAJORS, UNIBYID } from './types';\n\n//Base URL for all APIs\nconst URL = 'http://localhost:8080';\n\n//API call for add method\n// export const addTodo = (title,desc,date,time) => async(dispatch) => {\n\n//     const res = await fetch(`${URL}/todo`, {\n//     method:'POST',\n//     headers: {\n//         'Accept': 'application/json',\n//         'Content-Type': 'application/json'\n//     },\n//     body: JSON.stringify( {\"title\": title,\"description\" : desc, \"date\": date, \"time\": time, \"status\":0} ) })\n//     .then(response => response.json())\n\n//     .then(value => \n//        { \n//         dispatch({ type: ADDNEWTODO, payload: value})}\n//         )\n\n// }\n\n//API call to list all Universities from the DB\nexport const getAllUnis = () => async dispatch => {\n  try {\n    const res = await fetch(`${URL}/university/all`).then(res => res.json()).then(value => dispatch({\n      type: LISTUNI,\n      payload: value\n    }));\n  } catch (error) {\n    console.log(\"Could not fetch item\");\n  }\n};\n\n//API call to return details of a university\nexport const getUniById = () => async dispatch => {\n  console.log(\"coming\");\n  try {\n    const res = await fetch(`${URL}/university/63891c43ce5ef4534a05c99a${id}`).then(res => res.json()).then(value => dispatch({\n      type: UNIBYID,\n      payload: value\n    }));\n  } catch (error) {\n    console.log(\"Could not fetch item\");\n  }\n};\nexport const getAllMajors = () => async dispatch => {\n  try {\n    const res = await fetch(`${URL}/major/all`).then(res => res.json()).then(value => dispatch({\n      type: LISTMAJORS,\n      payload: value\n    }));\n  } catch (error) {\n    console.log(\"Could not fetch item\");\n  }\n};\n\n// //API call to switch from completed to incomplete\n// export const toggleTodos = (id,status) => async(dispatch) => {\n\n//         const res = await fetch(`${URL}/update-todo?id=${id}`,{\n//             method:'PUT',\n//             headers: {\n//                 'Accept': 'application/json',\n//                 'Content-Type': 'application/json'\n//             },\n//             body: JSON.stringify({'status':status}) })\n//             .then(response => response.json())\n//             .then(value => \n//             { \n//                 dispatch({ type: TOGGLETODO, payload: value})}\n//                 )\n\n// }\n\n// //API call to delete an API\n// export const deleteTodos = (id) => async(dispatch) => {\n//     try{\n\n//         const res = await fetch(`${URL}/remove-todo?id=${id}`,{method : 'DELETE'})\n//         .then(res => res.json())\n//         .then(value => {dispatch({ type: DELETETODO, payload: value});console.log(\"vv\",value)});\n//     }catch(error){\n//         console.log(\"Could not delete item\")\n//     }\n// }\n\n// //API call to update an existing record\n// export const updateTodo = (id,title,desc,date,time) => async(dispatch) => {\n//     try{\n//         const res = await fetch(`${URL}/update-todo?id=${id}`, { \n//             method : 'PUT',\n//             headers: {\n//                 'Accept': 'application/json',\n//                 'Content-Type': 'application/json'\n//             },\n//             body: JSON.stringify({\"title\": title,\"description\" : desc, \"date\": date, \"time\": time}) })\n//             .then(response => response.json())\n//             .then(value => \n//             { \n//             dispatch({ type: UPDATENEWTODO, payload: value})}\n//                 )\n//     }catch(error){\n//         console.log(\"Could not update an item\")\n//     }\n// }","map":{"version":3,"names":["LISTUNI","LISTMAJORS","UNIBYID","URL","getAllUnis","dispatch","res","fetch","then","json","value","type","payload","error","console","log","getUniById","id","getAllMajors"],"sources":["/Users/nethraneu/Documents/WEB DEV/finalProject/final-project-electrons/frontend/src/redux/action/index.js"],"sourcesContent":["import {LISTUNI,LISTMAJORS,UNIBYID} from './types';\n\n//Base URL for all APIs\nconst URL = 'http://localhost:8080';\n\n\n//API call for add method\n// export const addTodo = (title,desc,date,time) => async(dispatch) => {\n    \n//     const res = await fetch(`${URL}/todo`, {\n//     method:'POST',\n//     headers: {\n//         'Accept': 'application/json',\n//         'Content-Type': 'application/json'\n//     },\n//     body: JSON.stringify( {\"title\": title,\"description\" : desc, \"date\": date, \"time\": time, \"status\":0} ) })\n//     .then(response => response.json())\n   \n//     .then(value => \n//        { \n//         dispatch({ type: ADDNEWTODO, payload: value})}\n//         )\n    \n\n\n// }\n\n//API call to list all Universities from the DB\nexport const getAllUnis = () => async(dispatch) => {\n    try{\n        const res = await fetch(`${URL}/university/all`).then(res => res.json()).then(value => dispatch({ type: LISTUNI, payload: value}));\n        \n    }catch(error){\n        console.log(\"Could not fetch item\")\n    }\n}\n\n//API call to return details of a university\nexport const getUniById = () => async(dispatch) => {\n    console.log(\"coming\")\n    try{\n        const res = await fetch(`${URL}/university/63891c43ce5ef4534a05c99a${id}`).then(res => res.json()).then(value => dispatch({ type: UNIBYID, payload: value}));\n        \n    }catch(error){\n        console.log(\"Could not fetch item\")\n    }\n}\n\nexport const getAllMajors = () => async(dispatch) => {\n    try{\n        const res = await fetch(`${URL}/major/all`).then(res => res.json()).then(value => dispatch({ type: LISTMAJORS, payload: value}));\n        \n    }catch(error){\n        console.log(\"Could not fetch item\")\n    }\n}\n\n// //API call to switch from completed to incomplete\n// export const toggleTodos = (id,status) => async(dispatch) => {\n        \n//         const res = await fetch(`${URL}/update-todo?id=${id}`,{\n//             method:'PUT',\n//             headers: {\n//                 'Accept': 'application/json',\n//                 'Content-Type': 'application/json'\n//             },\n//             body: JSON.stringify({'status':status}) })\n//             .then(response => response.json())\n//             .then(value => \n//             { \n//                 dispatch({ type: TOGGLETODO, payload: value})}\n//                 )\n                \n    \n// }\n\n// //API call to delete an API\n// export const deleteTodos = (id) => async(dispatch) => {\n//     try{\n        \n//         const res = await fetch(`${URL}/remove-todo?id=${id}`,{method : 'DELETE'})\n//         .then(res => res.json())\n//         .then(value => {dispatch({ type: DELETETODO, payload: value});console.log(\"vv\",value)});\n//     }catch(error){\n//         console.log(\"Could not delete item\")\n//     }\n// }\n\n// //API call to update an existing record\n// export const updateTodo = (id,title,desc,date,time) => async(dispatch) => {\n//     try{\n//         const res = await fetch(`${URL}/update-todo?id=${id}`, { \n//             method : 'PUT',\n//             headers: {\n//                 'Accept': 'application/json',\n//                 'Content-Type': 'application/json'\n//             },\n//             body: JSON.stringify({\"title\": title,\"description\" : desc, \"date\": date, \"time\": time}) })\n//             .then(response => response.json())\n//             .then(value => \n//             { \n//             dispatch({ type: UPDATENEWTODO, payload: value})}\n//                 )\n//     }catch(error){\n//         console.log(\"Could not update an item\")\n//     }\n// }\n\n\n"],"mappings":"AAAA,SAAQA,OAAO,EAACC,UAAU,EAACC,OAAO,QAAO,SAAS;;AAElD;AACA,MAAMC,GAAG,GAAG,uBAAuB;;AAGnC;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAIA;;AAEA;AACA,OAAO,MAAMC,UAAU,GAAG,MAAM,MAAMC,QAAQ,IAAK;EAC/C,IAAG;IACC,MAAMC,GAAG,GAAG,MAAMC,KAAK,CAAE,GAAEJ,GAAI,iBAAgB,CAAC,CAACK,IAAI,CAACF,GAAG,IAAIA,GAAG,CAACG,IAAI,EAAE,CAAC,CAACD,IAAI,CAACE,KAAK,IAAIL,QAAQ,CAAC;MAAEM,IAAI,EAAEX,OAAO;MAAEY,OAAO,EAAEF;IAAK,CAAC,CAAC,CAAC;EAEtI,CAAC,QAAMG,KAAK,EAAC;IACTC,OAAO,CAACC,GAAG,CAAC,sBAAsB,CAAC;EACvC;AACJ,CAAC;;AAED;AACA,OAAO,MAAMC,UAAU,GAAG,MAAM,MAAMX,QAAQ,IAAK;EAC/CS,OAAO,CAACC,GAAG,CAAC,QAAQ,CAAC;EACrB,IAAG;IACC,MAAMT,GAAG,GAAG,MAAMC,KAAK,CAAE,GAAEJ,GAAI,uCAAsCc,EAAG,EAAC,CAAC,CAACT,IAAI,CAACF,GAAG,IAAIA,GAAG,CAACG,IAAI,EAAE,CAAC,CAACD,IAAI,CAACE,KAAK,IAAIL,QAAQ,CAAC;MAAEM,IAAI,EAAET,OAAO;MAAEU,OAAO,EAAEF;IAAK,CAAC,CAAC,CAAC;EAEhK,CAAC,QAAMG,KAAK,EAAC;IACTC,OAAO,CAACC,GAAG,CAAC,sBAAsB,CAAC;EACvC;AACJ,CAAC;AAED,OAAO,MAAMG,YAAY,GAAG,MAAM,MAAMb,QAAQ,IAAK;EACjD,IAAG;IACC,MAAMC,GAAG,GAAG,MAAMC,KAAK,CAAE,GAAEJ,GAAI,YAAW,CAAC,CAACK,IAAI,CAACF,GAAG,IAAIA,GAAG,CAACG,IAAI,EAAE,CAAC,CAACD,IAAI,CAACE,KAAK,IAAIL,QAAQ,CAAC;MAAEM,IAAI,EAAEV,UAAU;MAAEW,OAAO,EAAEF;IAAK,CAAC,CAAC,CAAC;EAEpI,CAAC,QAAMG,KAAK,EAAC;IACTC,OAAO,CAACC,GAAG,CAAC,sBAAsB,CAAC;EACvC;AACJ,CAAC;;AAED;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAGA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA"},"metadata":{},"sourceType":"module","externalDependencies":[]}